<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>